version: 2

# Archives section for creating the distribution files
archives:
  - files:
      - src: 'LICENSE'
        dst: 'LICENSE.txt'
    format: zip
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'

# Before build hooks (optional, used to download dependencies and prepare environment)
before:
  hooks:
    - 'go mod download'

# Build configuration for various OS and architecture targets
builds:
  - binary: '{{ .ProjectName }}_v{{ .Version }}_x5'  # Binary name format
    env:
      - CGO_ENABLED=0  # Disable CGo for cross-platform compatibility
    flags:
      - -trimpath  # Remove the file system paths from the final binary
    goos:
      - darwin
      - freebsd
      - linux
      - windows
    goarch:
      - '386'
      - amd64
      - arm
      - arm64
    ignore:
      - goarch: arm
        goos: windows
      - goarch: arm64
        goos: freebsd
      - goarch: arm64
        goos: windows
    ldflags:
      - -s -w -X main.Version={{.Version}}  # Set the version in the binary
    mod_timestamp: '{{ .CommitTimestamp }}'  # Timestamp of commit for builds

# Release section moved inside builds (if required in specific GoReleaser version)
release:
  extra_files:
    - glob: 'terraform-registry-manifest.json'
      name_template: '{{ .ProjectName }}_{{ .Version }}_manifest.json'
  ids:
    - none  # Disable auto-ids for releases

# Checksum generation configuration
checksum:
  algorithm: sha256
  extra_files:
    - glob: 'terraform-registry-manifest.json'
      name_template: '{{ .ProjectName }}_{{ .Version }}_manifest.json'
  name_template: '{{ .ProjectName }}_{{ .Version }}_SHA256SUMS'

# Milestone to close issues or PRs after release
milestones:
  - close: true

# Signing configuration for checksums and the release artifacts
signs:
  - artifacts: checksum
    args:
      # if you are using this is a GitHub action or some other automated pipeline, you
      # need to pass the batch flag to indicate its not interactive.
      - "--batch"
      - "--local-user"
      - "{{ .Env.GPG_FINGERPRINT }}" # set this environment variable for your signing key
      - "--output"
      - "${signature}"
      - "--detach-sign"
      - "${artifact}"

# Snapshot naming template for pre-release builds
snapshot:
  name_template: "{{ .Tag }}-next"
